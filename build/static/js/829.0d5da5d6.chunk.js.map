{"version":3,"file":"static/js/829.0d5da5d6.chunk.js","mappings":"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","sources":["webpack://create-company/./src/components/Editor/styles.module.scss?acaf","components/Editor/index.js","webpack://create-company/./src/components/Form/TemplateMail/styles.module.scss?ea1c","components/Form/TemplateMail/index.js","webpack://create-company/./src/pages/Admin/AdminMail/styles.module.scss?46c2","pages/Admin/AdminMail/index.js","service/AdminService/AdminMailService.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ant-table-scroll-horizontal\":\"styles_ant-table-scroll-horizontal__57n-o\",\"ant-table-container\":\"styles_ant-table-container__gnp9b\",\"ant-table-content\":\"styles_ant-table-content__3eEAR\",\"cc-card\":\"styles_cc-card__rNg-T\",\"ant-card-head\":\"styles_ant-card-head__YvyPh\",\"ant-card-head-wrapper\":\"styles_ant-card-head-wrapper__mZGCs\",\"ant-card-head-title\":\"styles_ant-card-head-title__jJ7dV\",\"ant-card-body\":\"styles_ant-card-body__kQ2Y3\",\"ant-layout-footer\":\"styles_ant-layout-footer__8eKtE\",\"ant-form-item-control-input-content\":\"styles_ant-form-item-control-input-content__J2oa9\",\"ant-picker\":\"styles_ant-picker__Bz3aJ\",\"ant-select-selector\":\"styles_ant-select-selector__hmNHt\",\"site-layout-background\":\"styles_site-layout-background__ZA+DD\",\"spin-suspense\":\"styles_spin-suspense__VJCxL\",\"active\":\"styles_active__GXTYy\",\"editor\":\"styles_editor__Bk4za\",\"heading\":\"styles_heading__SSaYc\",\"editorContent\":\"styles_editorContent__e2kf8\",\"disabled\":\"styles_disabled__lrogg\"};","import Link from \"@tiptap/extension-link\";\r\nimport { EditorContent, useEditor } from \"@tiptap/react\";\r\nimport StarterKit from \"@tiptap/starter-kit\";\r\nimport clsx from \"clsx\";\r\nimport React, { forwardRef, useEffect, useImperativeHandle } from \"react\";\r\nimport {\r\n  RiAlignVertically, RiArrowGoBackFill,\r\n  RiArrowGoForwardFill, RiBold, RiH1,\r\n  RiH2,\r\n  RiH3,\r\n  RiH4,\r\n  RiH5,\r\n  RiH6, RiItalic, RiLink,\r\n  RiLinkUnlink, RiListCheck, RiParagraph, RiSeparator\r\n} from \"react-icons/ri\";\r\nimport { setLink } from \"src/helper/Common\";\r\nimport styles from \"./styles.module.scss\";\r\n\r\nexport default forwardRef(function CCEditor(props, ref) {\r\n  const { content, onChange } = props;\r\n  const editor = useEditor({\r\n    extensions: [StarterKit, Link],\r\n    content: content,\r\n  });\r\n  useEffect(() => {\r\n    editor?.commands?.setContent(content);\r\n  }, [content]);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    getContent() {\r\n      return editor.getHTML();\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <div className={styles.editor}>\r\n      <MenuBar editor={editor} />\r\n      <EditorContent editor={editor} className={styles.editorContent} />\r\n    </div>\r\n  );\r\n});\r\n\r\nconst MenuBar = ({ editor }) => {\r\n  if (!editor) {\r\n    return null;\r\n  }\r\n  const isCursorOverLink = editor.getAttributes(\"link\").href;\r\n  return (\r\n    <div className={styles.heading}>\r\n      <button\r\n        onClick={() => editor.chain().focus().toggleBold().run()}\r\n        className={editor.isActive(\"bold\") ? styles.active : \"\"}\r\n      >\r\n        <RiBold />\r\n      </button>\r\n      <button\r\n        onClick={() => editor.chain().focus().toggleItalic().run()}\r\n        className={editor.isActive(\"italic\") ? styles.active : \"\"}\r\n      >\r\n        <RiItalic />\r\n      </button>\r\n      <button\r\n        onClick={() => editor.chain().focus().toggleStrike().run()}\r\n        className={editor.isActive(\"strike\") ? styles.active : \"\"}\r\n      >\r\n        <RiAlignVertically />\r\n      </button>\r\n      <button className=\"icon\" onClick={() => setLink(editor)}>\r\n        <RiLink />\r\n      </button>\r\n      <button\r\n        className={clsx({\r\n          [styles.disabled]: !isCursorOverLink,\r\n        })}\r\n        onClick={() => setLink(editor)}\r\n      >\r\n        <RiLinkUnlink />\r\n      </button>\r\n      {/* <button\r\n        onClick={() => editor.chain().focus().toggleCode().run()}\r\n        className={editor.isActive(\"code\") ? styles.active : \"\"}\r\n      >\r\n        Code\r\n      </button> */}\r\n\r\n      {/* <button onClick={() => editor.chain().focus().unsetAllMarks().run()}>clear marks</button>\r\n      <button onClick={() => editor.chain().focus().clearNodes().run()}>clear nodes</button> */}\r\n      <button\r\n        onClick={() => editor.chain().focus().setParagraph().run()}\r\n        className={editor.isActive(\"paragraph\") ? styles.active : \"\"}\r\n      >\r\n        <RiParagraph />\r\n      </button>\r\n      <button\r\n        onClick={() => editor.chain().focus().toggleHeading({ level: 1 }).run()}\r\n        className={editor.isActive(\"heading\", { level: 1 }) ? styles.active : \"\"}\r\n      >\r\n        <RiH1 />\r\n      </button>\r\n      <button\r\n        onClick={() => editor.chain().focus().toggleHeading({ level: 2 }).run()}\r\n        className={editor.isActive(\"heading\", { level: 2 }) ? styles.active : \"\"}\r\n      >\r\n        <RiH2 />\r\n      </button>\r\n      <button\r\n        onClick={() => editor.chain().focus().toggleHeading({ level: 3 }).run()}\r\n        className={editor.isActive(\"heading\", { level: 3 }) ? styles.active : \"\"}\r\n      >\r\n        <RiH3 />\r\n      </button>\r\n      <button\r\n        onClick={() => editor.chain().focus().toggleHeading({ level: 4 }).run()}\r\n        className={editor.isActive(\"heading\", { level: 4 }) ? styles.active : \"\"}\r\n      >\r\n        <RiH4 />\r\n      </button>\r\n      <button\r\n        onClick={() => editor.chain().focus().toggleHeading({ level: 5 }).run()}\r\n        className={editor.isActive(\"heading\", { level: 5 }) ? styles.active : \"\"}\r\n      >\r\n        <RiH5 />\r\n      </button>\r\n      <button\r\n        onClick={() => editor.chain().focus().toggleHeading({ level: 6 }).run()}\r\n        className={editor.isActive(\"heading\", { level: 6 }) ? styles.active : \"\"}\r\n      >\r\n        <RiH6 />\r\n      </button>\r\n      <button\r\n        onClick={() => editor.chain().focus().toggleBulletList().run()}\r\n        className={editor.isActive(\"bulletList\") ? styles.active : \"\"}\r\n      >\r\n        <RiListCheck />\r\n      </button>\r\n      {/* <button\r\n        onClick={() => editor.chain().focus().toggleOrderedList().run()}\r\n        className={editor.isActive(\"orderedList\") ? styles.active : \"\"}\r\n      >\r\n        ordered list\r\n      </button>\r\n      <button\r\n        onClick={() => editor.chain().focus().toggleCodeBlock().run()}\r\n        className={editor.isActive(\"codeBlock\") ? styles.active : \"\"}\r\n      >\r\n        code block\r\n      </button> */}\r\n      {/* <button\r\n        onClick={() => editor.chain().focus().toggleBlockquote().run()}\r\n        className={editor.isActive(\"blockquote\") ? styles.active : \"\"}\r\n      >\r\n        blockquote\r\n      </button> */}\r\n      <button onClick={() => editor.chain().focus().setHorizontalRule().run()}>\r\n        <RiSeparator />\r\n      </button>\r\n      {/* <button onClick={() => editor.chain().focus().setHardBreak().run()}>hard break</button> */}\r\n      <button onClick={() => editor.chain().focus().undo().run()}>\r\n        <RiArrowGoBackFill />\r\n      </button>\r\n      <button onClick={() => editor.chain().focus().redo().run()}>\r\n        <RiArrowGoForwardFill />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mail\":\"styles_mail__ZMJXn\",\"header\":\"styles_header__zUdkY\",\"title\":\"styles_title__VDGxt\",\"action\":\"styles_action__JmRnc\",\"loading\":\"styles_loading__SXJog\",\"loadingActive\":\"styles_loadingActive__lvEWh\"};","import React, { memo, useEffect, useRef, useState } from 'react';\r\nimport { Card, Form, Button, message, Spin, Input } from 'antd';\r\nimport CCEditor from '../../Editor';\r\nimport { RiArrowGoBackFill, RiCloseFill } from 'react-icons/ri';\r\nimport styles from './styles.module.scss';\r\nimport axios from 'src/config/axios';\r\nimport AdminMailService from 'src/service/AdminService/AdminMailService';\r\nimport clsx from 'clsx';\r\n\r\nconst TemplateMail = (props) => {\r\n  const [name, setName] = useState();\r\n  const [content, setContent] = useState();\r\n  const [subject, setSubject] = useState();\r\n  const [loading, setLoading] = useState(false);\r\n  const editorRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (props.data) {\r\n      setName(props.data.name);\r\n      setContent(props.content);\r\n      setSubject(props.data.subject);\r\n    }\r\n    return () => {\r\n      setName();\r\n      setContent();\r\n      setSubject();\r\n    };\r\n  }, [props]);\r\n\r\n  const handleSave = async () => {\r\n    if (name.length <= 1) return;\r\n    let newContent = editorRef.current.getContent();\r\n    if (newContent.length <= 1) return;\r\n    setLoading(true);\r\n\r\n    // Add new\r\n    if (props.type === 1) {\r\n      try {\r\n        let res = await AdminMailService.addTemplate({ name, subject, content: newContent });\r\n        if (res.data.status === 201) {\r\n          message.success(res.data.message);\r\n        } else message.error(res.data.message);\r\n      } catch (err) {\r\n        message.error(err) || console.log(err);\r\n      } finally {\r\n        if (props.onFinishScreen) {\r\n          props.onFinishScreen();\r\n        }\r\n        setLoading(false);\r\n      }\r\n    }\r\n    if (props.type === 2) {\r\n      try {\r\n        let res = await AdminMailService.editTemplate({\r\n          _id: props.data._id,\r\n          name,\r\n          content: newContent,\r\n          subject,\r\n        });\r\n        if (res.data.status === 200) {\r\n          message.success(res.data.message);\r\n        } else message.error(res.data.message);\r\n      } catch (err) {\r\n        message.error(err) || console.log(err);\r\n      } finally {\r\n        if (props.onFinishScreen) {\r\n          props.onFinishScreen();\r\n        }\r\n        setLoading(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.mail}>\r\n      <Input size=\"middle\" placeholder={'Tiêu đề'} value={name} onChange={(e) => setName(e.target.value)} />\r\n\r\n      <Input size=\"middle\" placeholder={'Subject'} value={subject} onChange={(e) => setSubject(e.target.value)} />\r\n\r\n      <CCEditor content={content} ref={editorRef} />\r\n\r\n      <Button className={styles.submit} onClick={handleSave}>\r\n        Submit\r\n      </Button>\r\n\r\n      <div\r\n        className={clsx([styles.loading], {\r\n          [styles.loadingActive]: loading,\r\n        })}\r\n      >\r\n        <Spin spinning={loading} />\r\n      </div>\r\n    </div>\r\n  );\r\n  \r\n};\r\n\r\nexport default memo(TemplateMail);\r\n","// extracted by mini-css-extract-plugin\nexport default {\"mail\":\"styles_mail__GyscS\",\"header\":\"styles_header__2T6ma\",\"title\":\"styles_title__Ww3ig\",\"action\":\"styles_action__KVF79\",\"tableContent\":\"styles_tableContent__-hgln\",\"popover\":\"styles_popover__vsAvL\"};","import { DeleteOutlined, FormOutlined, PlusSquareOutlined } from '@ant-design/icons';\r\nimport { Button, Card, Col, Drawer, message, Popover, Row, Table, Tooltip } from 'antd';\r\nimport parser from 'html-react-parser';\r\nimport { useEffect, useState, memo } from 'react';\r\nimport TemplateMail from 'src/components/Form/TemplateMail';\r\nimport AdminMailService from 'src/service/AdminService/AdminMailService';\r\nimport styles from './styles.module.scss';\r\nfunction ListTemplateMail(props) {\r\n  // const router = useRouter();\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [drawer, setDrawer] = useState({\r\n    title: '',\r\n    visible: false,\r\n    component: null,\r\n    width: 0,\r\n  });\r\n  const fetchTemplateMail = async (page = 1) => {\r\n    try {\r\n      let params = { page: page };\r\n      setLoading(true);\r\n      let res = await AdminMailService.getTemplate(params);\r\n      if (res.data.status === 200) {\r\n        setData(res.data.data); // render 1 lan\r\n      } else {\r\n        message.error(res.data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false); // render 2 lan\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTemplateMail();\r\n  }, []);\r\n\r\n  const addTemplate = () => {\r\n    setDrawer({\r\n      ...drawer,\r\n      title: 'Thêm mẫu mới',\r\n      visible: true,\r\n      width: '500px',\r\n      component: <TemplateMail onClose={onClose} type={1} onFinishScreen={() => fetchTemplateMail()} />,\r\n    });\r\n  };\r\n\r\n  const editTemplate = (record) => {\r\n    setDrawer({\r\n      ...drawer,\r\n      title: 'Chỉnh sửa mẫu',\r\n      visible: true,\r\n      width: '500px',\r\n      component: (\r\n        <TemplateMail\r\n          data={record}\r\n          content={record.content}\r\n          onClose={onClose}\r\n          type={2}\r\n          onFinishScreen={() => fetchTemplateMail()}\r\n        />\r\n      ),\r\n    });\r\n  };\r\n\r\n  const onClose = () => {\r\n    setDrawer({\r\n      ...drawer,\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  const deleteTemplate = async (record) => {\r\n    setLoading(true);\r\n    try {\r\n      let res = await AdminMailService.deleteTemplate(record._id);\r\n      if (res.data.status === 200) {\r\n        message.success(res.data.message);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false);\r\n      fetchTemplateMail();\r\n    }\r\n  };\r\n  console.log('render');\r\n\r\n  return (\r\n    <Card\r\n      // style={{ marginTop: 10 }}\r\n      className=\"cc-card\"\r\n      title=\"Template Mail\"\r\n      extra={[\r\n        <Button key=\"add-template\" type=\"text\" onClick={() => addTemplate()} icon={<PlusSquareOutlined />}>\r\n          Thêm mới\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <Table\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={data._template}\r\n        loading={{\r\n          spinning: loading,\r\n          tip: 'Loading...',\r\n          delay: 100,\r\n        }}\r\n        pagination={{\r\n          current: data.current_page,\r\n          pageSize: 10,\r\n          total: data.count,\r\n          onChange: (page, pageSize) => {\r\n            fetchTemplateMail(page);\r\n          },\r\n          showSizeChanger: false,\r\n        }}\r\n        scroll={{ x: 1200 }}\r\n      >\r\n        <Table.Column\r\n          width={'20%'}\r\n          title=\"Mẫu Email\"\r\n          dataIndex=\"name\"\r\n          render={(val, record, i) => (\r\n            <Tooltip title={record.name} color={'#108ee9'} key={'#108ee9'}>\r\n              {record.name}\r\n            </Tooltip>\r\n          )}\r\n        />\r\n        <Table.Column width={'20%'} title=\"Subject\" dataIndex=\"subject\" render={(val, record, i) => record.subject} />\r\n        <Table.Column\r\n          title=\"Nội dung Email\"\r\n          width={'50%'}\r\n          render={(val, record, i) => (\r\n            <div className={styles.tableContent}>\r\n              <Popover\r\n                content={<div className={styles.popover}>{parser(record?.content || '')}</div>}\r\n                color={'#108ee9'}\r\n                key={'#108ee9'}\r\n                title={record.name || ''}\r\n                placement=\"top\"\r\n              >\r\n                {parser(record?.content || '')}\r\n              </Popover>\r\n            </div>\r\n          )}\r\n        />\r\n\r\n        <Table.Column\r\n          width={'10%'}\r\n          title=\"Action\"\r\n          render={(val, record, i) => (\r\n            <Row>\r\n              <Col span={12}>\r\n                <Button type=\"text\" size=\"small\" onClick={() => editTemplate(record)}>\r\n                  <FormOutlined />\r\n                </Button>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Button type=\"text\" size=\"small\" onClick={() => deleteTemplate(record)}>\r\n                  <DeleteOutlined />\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n        />\r\n      </Table>\r\n      <Drawer\r\n        title={drawer.title}\r\n        width={720}\r\n        onClose={onClose}\r\n        visible={drawer.visible}\r\n        // bodyStyle={{ paddingBottom: 80 }}\r\n      >\r\n        {drawer.component}\r\n      </Drawer>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default memo(ListTemplateMail);\r\n","import axios from \"src/config/axios\";\r\n\r\nconst api_path = {\r\n  getTemplate: \"/admin/template\",\r\n  deleteTemplate: \"/admin/template/delete\",\r\n  addTemplate: \"/admin/template\",\r\n  editTemplate: \"/admin/template/edit\",\r\n};\r\n\r\nconst AdminMailService = {\r\n  getTemplate: (params) => {\r\n    return axios.get(api_path.getTemplate, { params });\r\n  },\r\n  addTemplate: (params) => {\r\n    return axios.post(api_path.addTemplate, params);\r\n  },\r\n  editTemplate: (params) => {\r\n    return axios.post(`${api_path.editTemplate}/${params._id}`, params);\r\n  },\r\n  deleteTemplate: (id) => {\r\n    return axios.post(`${api_path.deleteTemplate}/${id}`);\r\n  },\r\n};\r\n\r\nexport default AdminMailService;\r\n"],"names":["forwardRef","props","ref","content","editor","onChange","useEditor","extensions","StarterKit","Link","useEffect","commands","setContent","useImperativeHandle","getContent","getHTML","className","styles","MenuBar","isCursorOverLink","getAttributes","href","onClick","chain","focus","toggleBold","run","isActive","toggleItalic","toggleStrike","setLink","clsx","setParagraph","toggleHeading","level","toggleBulletList","setHorizontalRule","undo","redo","TemplateMail","useState","name","setName","subject","setSubject","loading","setLoading","editorRef","useRef","data","handleSave","length","newContent","current","type","AdminMailService","res","status","message","console","log","onFinishScreen","_id","size","placeholder","value","e","target","spinning","memo","ListTemplateMail","setData","title","visible","component","width","drawer","setDrawer","fetchTemplateMail","page","params","onClose","deleteTemplate","record","extra","icon","PlusSquareOutlined","bordered","dataSource","_template","tip","delay","pagination","current_page","pageSize","total","count","showSizeChanger","scroll","x","dataIndex","render","val","i","color","parser","placement","span","editTemplate","FormOutlined","DeleteOutlined","api_path","getTemplate","axios","addTemplate","id"],"sourceRoot":""}