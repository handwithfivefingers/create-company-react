{"version":3,"file":"static/js/199.64ac4e1b.chunk.js","mappings":"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","sources":["service/UserService/OrderService.js","webpack://create-company/./src/pages/User/Order/styles.module.scss?91c5","pages/User/Order/index.js"],"sourcesContent":["import axios from '../../config/axios';\r\n\r\nconst api_path = {\r\n  getOrders: '/order',\r\n  payment: '/payment',\r\n};\r\n\r\nconst OrderService = {\r\n  getOrders: () => {\r\n    return axios.get(api_path.getOrders);\r\n  },\r\n  Payment: (params) => {\r\n    return axios.post(api_path.payment, params);\r\n  },\r\n};\r\n\r\nexport default OrderService;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btnGroup\":\"styles_btnGroup__w7NNP\"};","import { FormOutlined } from '@ant-design/icons';\r\nimport { Button, Drawer, Form, message, Modal, Table, Tag, Tooltip } from 'antd';\r\nimport dateformat from 'dateformat';\r\nimport { useEffect, useState } from 'react';\r\nimport { MdCreditCard } from 'react-icons/md';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { number_format } from 'src/helper/Common';\r\nimport OrderService from 'src/service/UserService/OrderService';\r\nimport styles from './styles.module.scss';\r\n\r\nconst UserOrder = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [modal, setModal] = useState({\r\n    visible: false,\r\n    width: 0,\r\n    component: null,\r\n  });\r\n  const [drawer, setDrawer] = useState({\r\n    visible: false,\r\n    width: 0,\r\n    data: null,\r\n  });\r\n  let navigate = useNavigate();\r\n  useEffect(() => {\r\n    getScreenData();\r\n  }, []);\r\n\r\n  const getScreenData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      let res = await OrderService.getOrders();\r\n\r\n      if (res.data.status === 200) {\r\n        setData(res.data.data);\r\n      } else {\r\n        console.log(res);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handlePurchase = (record) => {\r\n    const date = new Date();\r\n    var createDate = dateformat(date, 'yyyymmddHHmmss');\r\n    var orderId = dateformat(date, 'HHmmss');\r\n\r\n    let params = {\r\n      createDate,\r\n      orderId,\r\n      amount: +record?.price * 100,\r\n      orderInfo: record?._id,\r\n    };\r\n\r\n    return paymentService(params);\r\n  };\r\n\r\n  const paymentService = async (params) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await OrderService.Payment(params);\r\n      if (res.status === 200) {\r\n        window.open(res.data.url);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      message.error('something was wrong');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setModal({\r\n      ...modal,\r\n      visible: false,\r\n    });\r\n    setDrawer((draw) => ({ ...draw, visible: false }));\r\n  };\r\n\r\n  const onEditOrder = (record) => {\r\n    console.log('order', record);\r\n\r\n    let { data } = record;\r\n    let url = null;\r\n    for (let props in data) {\r\n      if (props === 'pending') {\r\n        url = 'tam-ngung';\r\n      } else if (props === 'change_info') {\r\n        url = 'thay-djoi-thong-tin';\r\n      } else if (props === 'dissolution') {\r\n        url = 'giai-the';\r\n      } else if (props === 'create_company') {\r\n        url = 'thanh-lap-doanh-nghiep';\r\n      }\r\n    }\r\n    navigate(`/user/san-pham/${url}`, { state: record });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        size=\"small\"\r\n        bordered\r\n        dataSource={data}\r\n        // loading={loading}\r\n        loading={{\r\n          spinning: loading,\r\n          tip: 'Loading...',\r\n          delay: 100,\r\n        }}\r\n        rowKey={(record) => record._id}\r\n        scroll={{ x: 1000 }}\r\n      >\r\n        <Table.Column\r\n          align=\"center\"\r\n          title=\"Đơn hàng\"\r\n          dataIndex=\"per_main\"\r\n          render={(val, record, i) => {\r\n            return record.name;\r\n          }}\r\n        />\r\n        <Table.Column\r\n          align=\"center\"\r\n          title=\"Người đăng kí\"\r\n          render={(val, record, i) => {\r\n            return record?.orderOwner.name;\r\n          }}\r\n        />\r\n\r\n        <Table.Column\r\n          width=\"350px\"\r\n          align=\"center\"\r\n          title=\"Loại hình\"\r\n          dataIndex=\"\"\r\n          render={(val, record, i) => {\r\n            // 2 Case : 22/03/2022\r\n            if (record?.data?.create_company) {\r\n              return 'Thành lập doanh nghiệp';\r\n            } else if (record?.data?.change_info) {\r\n              return 'Thay đổi thông tin';\r\n            } else if (record?.data?.pending) {\r\n              return 'Tạm hoãn';\r\n            } else if (record?.data?.dissolution) {\r\n              return 'Giải thể';\r\n            }\r\n          }}\r\n        />\r\n\r\n        <Table.Column\r\n          align=\"center\"\r\n          title=\"Giá tiền\"\r\n          render={(val, record, i) => {\r\n            return <>{number_format(record?.price)} VND</>;\r\n          }}\r\n        />\r\n\r\n        <Table.Column\r\n          align=\"center\"\r\n          title=\"Thanh toán\"\r\n          dataIndex=\"\"\r\n          render={(val, record, i) => {\r\n            return record?.payment === 1 ? (\r\n              <Tag color=\"green\">Đã thanh toán</Tag>\r\n            ) : (\r\n              <Tag color=\"volcano\">Chưa thanh toán</Tag>\r\n            );\r\n          }}\r\n        />\r\n\r\n        <Table.Column\r\n          align=\"center\"\r\n          width={88}\r\n          render={(v, record, i) => (\r\n            <div className={styles.btnGroup}>\r\n              <Tooltip title=\"Chỉnh sửa\" color={'blue'}>\r\n                <Button size=\"large\" type=\"primary\" shape=\"circle\" onClick={() => onEditOrder(record)}>\r\n                  <FormOutlined />\r\n                </Button>\r\n              </Tooltip>\r\n              {/* {!record.payment &&   */}\r\n              <Tooltip title=\"Thanh toán\" color={'blue'}>\r\n                <Button\r\n                  size=\"large\"\r\n                  type=\"primary\"\r\n                  shape=\"circle\"\r\n                  disabled={record.payment}\r\n                  onClick={() => handlePurchase(record)}\r\n                >\r\n                  <MdCreditCard />\r\n                </Button>\r\n              </Tooltip>\r\n              {/* // } */}\r\n            </div>\r\n          )}\r\n        />\r\n      </Table>\r\n\r\n      <Modal visible={modal.visible} footer={null} bodyStyle={null} width={modal.width} onCancel={() => closeModal()}>\r\n        {modal.component}\r\n      </Modal>\r\n      <FormDrawer {...drawer} closeModal={closeModal} />\r\n    </div>\r\n  );\r\n};\r\nexport default UserOrder;\r\n\r\nconst FormDrawer = (props) => {\r\n  return (\r\n    <Drawer visible={props.visible} width={props.width} onClose={props.closeModal} destroyOnClose>\r\n      <Form></Form>\r\n    </Drawer>\r\n  );\r\n};\r\n"],"names":["api_path","getOrders","axios","Payment","params","useState","loading","setLoading","data","setData","visible","width","component","modal","setModal","drawer","setDrawer","navigate","useNavigate","useEffect","getScreenData","OrderService","res","status","console","log","paymentService","window","open","url","message","closeModal","draw","size","bordered","dataSource","spinning","tip","delay","rowKey","record","_id","scroll","x","align","title","dataIndex","render","val","i","name","orderOwner","create_company","change_info","pending","dissolution","number_format","price","payment","color","v","className","styles","type","shape","onClick","props","state","onEditOrder","FormOutlined","disabled","date","Date","createDate","dateformat","orderId","amount","orderInfo","handlePurchase","footer","bodyStyle","onCancel","FormDrawer","onClose","destroyOnClose"],"sourceRoot":""}